{"version":3,"sources":["App.js","index.js"],"names":["App","useState","emojis","setEmojis","search","setSearch","emoji","setEmoji","useEffect","Object","keys","length","fetch","then","r","json","console","log","searchTest","RegExp","icons","map","label","test","className","onClick","navigator","clipboard","writeText","src","alt","type","onChange","e","target","value","toLowerCase","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAmEeA,MAhEf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,SAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEAC,qBACE,WACqC,IAA/BC,OAAOC,KAAKR,GAAQS,QACtBC,MAAM,iCACLC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAC,GAAC,OAAIX,EAAUW,SAMzBE,QAAQC,IAAIb,GAGd,IAAMc,EAAa,IAAIC,OAAOf,EAAQ,KAEhCgB,EAAQX,OAAOC,KAAKR,GAAQmB,KAChC,SAAAC,GAEE,GAAIlB,EAAOO,OAAS,IACDO,EAAWK,KAAKD,GAChB,MAAO,GAG1B,IAAIE,EAAY,QAIhB,OAFAF,IAAUhB,IAAUkB,GAAa,YAG/B,qBAAKA,UAAWA,EAAuBC,QACrC,WACEC,UAAUC,UAAUC,UAApB,WAAkCN,EAAlC,MACAf,EAASe,IAHb,SAOE,qBAAKO,IAAK3B,EAAOoB,GAAQQ,IAAKR,KAPAA,MActC,OACE,sBAAKE,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,SAAf,SACE,uBAAOO,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAO5B,EAAU4B,EAAEC,OAAOC,MAAMC,gBAAgBC,YAAY,eAI7F,qBAAKb,UAAU,eAAf,SACGJ,QCxDTkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e2405bf4.chunk.js","sourcesContent":["import './App.scss';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction App() {\r\n\r\n  const [emojis, setEmojis] = useState({})\r\n  const [search, setSearch] = useState('')\r\n  const [emoji, setEmoji] = useState('1f999')\r\n\r\n  useEffect(\r\n    () => {\r\n      if (Object.keys(emojis).length === 0){\r\n        fetch('https://api.github.com/emojis')\r\n        .then(r => r.json())\r\n        .then(r => setEmojis(r))\r\n      }\r\n    }\r\n  )\r\n\r\n\r\n    console.log(search)\r\n    \r\n    \r\n  const searchTest = new RegExp(search, 'g')\r\n\r\n  const icons = Object.keys(emojis).map(\r\n    label => {\r\n\r\n      if (search.length > 0){\r\n        let isInSearch = searchTest.test(label)\r\n        if (!isInSearch){return ''}\r\n      }      \r\n\r\n      let className = 'emoji'\r\n\r\n      label === emoji && (className += ' clicked')\r\n\r\n      return (\r\n        <div className={className} key={label} onClick={\r\n          () => {\r\n            navigator.clipboard.writeText(`:${label}:`)\r\n            setEmoji(label)\r\n        }\r\n        }>\r\n          \r\n          <img src={emojis[label]} alt={label}/>\r\n        </div>\r\n      )\r\n    }\r\n  )\r\n\r\n\r\n  return (\r\n    <div className='App'>\r\n      <div className='topbar'>\r\n        <div className='search'>\r\n          <input type='text' onChange={(e) => setSearch(e.target.value.toLowerCase())} placeholder='search'/>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className='emojiWrapper'>\r\n        {icons}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}