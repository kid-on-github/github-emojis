{"version":3,"sources":["App.js","index.js"],"names":["App","useState","emojis","setEmojis","search","setSearch","setEmoji","useEffect","Object","keys","length","fetch","then","r","json","console","log","searchTest","RegExp","icons","map","label","test","className","onClick","fileName","match","code","toString","slice","src","alt","type","onChange","e","target","value","toLowerCase","placeholder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAuEeA,MApEf,WAEE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,mBAAS,SAAnC,mBAAcK,GAAd,WAEAC,qBACE,WACqC,IAA/BC,OAAOC,KAAKP,GAAQQ,QACtBC,MAAM,iCACLC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZF,MAAK,SAAAC,GAAC,OAAIV,EAAUU,SAMzBE,QAAQC,IAAIZ,GAGd,IAAMa,EAAa,IAAIC,OAAOd,EAAQ,KAEhCe,EAAQX,OAAOC,KAAKP,GAAQkB,KAChC,SAAAC,GAEE,GAAIjB,EAAOM,OAAS,IACDO,EAAWK,KAAKD,GAChB,MAAO,GAI1B,OACE,qBAAKE,UAAU,QAAoBC,QACjC,WAEA,IAAMC,EAAWvB,EAAOmB,GAAOK,MAAM,iBAC/BC,EAAOF,EAASG,WAAWC,MAAM,EAAGJ,EAASf,OAAS,GAC5DJ,EAASqB,IALX,SAUE,qBAAKG,IAAK5B,EAAOmB,GAAQU,IAAKV,KAVJA,MAkBlC,OACE,sBAAKE,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SAGE,qBAAKA,UAAU,SAAf,SACE,uBAAOS,KAAK,OAAOC,SAAU,SAACC,GAAD,OAAO7B,EAAU6B,EAAEC,OAAOC,MAAMC,gBAAgBC,YAAY,eAK7F,qBAAKf,UAAU,eAAf,SACGJ,QC5DToB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.673de228.chunk.js","sourcesContent":["import './App.scss';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [emojis, setEmojis] = useState({})\n  const [search, setSearch] = useState('')\n  const [emoji, setEmoji] = useState('1f999')\n\n  useEffect(\n    () => {\n      if (Object.keys(emojis).length === 0){\n        fetch('https://api.github.com/emojis')\n        .then(r => r.json())\n        .then(r => setEmojis(r))\n      }\n    }\n  )\n\n\n    console.log(search)\n    \n    \n  const searchTest = new RegExp(search, 'g')\n\n  const icons = Object.keys(emojis).map(\n    label => {\n\n      if (search.length > 0){\n        let isInSearch = searchTest.test(label)\n        if (!isInSearch){return ''}\n      }      \n\n\n      return (\n        <div className='emoji' key={label} onClick={\n          () => {\n          \n          const fileName = emojis[label].match(/(\\d|\\w)+.png/g)\n          const code = fileName.toString().slice(0, fileName.length - 5)\n          setEmoji(code)\n        \n          }\n        }>\n          \n          <img src={emojis[label]} alt={label}/>\n        </div>\n      )\n    }\n  )\n\n\n  //(e) => setSearch(e.target.value)\n  return (\n    <div className='App'>\n      <div className='topbar'>\n\n\n        <div className='search'>\n          <input type='text' onChange={(e) => setSearch(e.target.value.toLowerCase())} placeholder='search'/>\n        </div>\n\n      </div>\n\n      <div className='emojiWrapper'>\n        {icons}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}